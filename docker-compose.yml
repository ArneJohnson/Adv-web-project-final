services:
  database:
    build:
      context: .  # Uses the current directory
      dockerfile: Dockerfile.database  # Builds from a specific Dockerfile
    container_name: postgres_db  # Name of the container
    restart: always  # Container will restart if it crashes
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"  # Maps port 5432 from the container to the host machine
    volumes:
      - db_data:/var/lib/postgresql/data  # Persist data in a Docker volume
      - ./stores.json:/usr/src/app/stores.json  # Mount the stores.json file

  frontend:
    build:
      context: .  # Uses the current directory
      dockerfile: Dockerfile.frontend  # Builds from a specific Dockerfile
    container_name: node_frontend  # Name of the container
    restart: always  # Container will restart if it crashes
    ports:
      - "5000:5000"  # Exposes frontend app on port 5000
    depends_on:
      - database  # Ensures that the database starts before the frontend
    environment:
      DATABASE_URL: "postgres://postgres:12345@database:5432/postgres"  # URL to connect to the database
    # Add a healthcheck to ensure the frontend waits for the database to be fully ready
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      retries: 3
      start_period: 5s
      timeout: 10s

volumes:
  db_data:  # Creates a volume for database storage
